{"version":3,"sources":["components/Filter.js","components/Weather.js","components/Country.js","components/Countries.js","App.js","index.js"],"names":["Filter","func","onChange","Weather","city","useState","weather","setWeather","useEffect","axios","get","process","then","response","data","temp","description","wind_spd","wind_cdir","Country","country","name","capital","population","languages","map","language","index","src","flag","width","height","alt","Countries","countries","filter","showButton","filteredCountries","toLowerCase","includes","length","onClick","value","App","setFilter","setCountries","event","target","ReactDOM","render","document","getElementById"],"mappings":"wLAUeA,EARA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACE,kDACiB,uBAAOC,SAAUD,QCoBvBE,EAtBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACRC,IACGC,IADH,qDACqDN,EADrD,gBACiEO,qCAC9DC,MAAK,SAAAC,GACJN,EAAWM,EAASC,KAAKA,KAAK,SAEjC,CAACV,IAEAE,EACK,gCACL,8CAAqBA,EAAQS,KADxB,QAC+B,uBACnCT,EAAQA,QAAQU,YAAY,uBAC7B,uCAAcV,EAAQW,SAHjB,kBAG0CX,EAAQY,aAGlD,yBCDIC,EAjBC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChB,OACE,gCACE,6BAAKA,EAAQC,OACb,yCAAYD,EAAQE,WACpB,4CAAeF,EAAQG,cACvB,2CACCH,EAAQI,UAAUC,KAAI,SAACC,EAAUC,GAAX,OACrB,6BAAiBD,EAASL,MAAjBM,MAEX,qBAAKC,IAAKR,EAAQS,KAAMC,MAAM,MAAMC,OAAO,MAAMC,IAAKZ,EAAQC,OAC9D,6CAAgBD,EAAQC,QACxB,cAAC,EAAD,CAASjB,KAAMgB,EAAQE,cCcdW,EA1BG,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WAC/BC,EAAoBH,EAAUC,QAClC,SAAAf,GAAO,OAAIA,EAAQC,KAAKiB,cAAcC,SAASJ,EAAOG,kBAGxD,MAAe,KAAXH,EACK,uBACEE,EAAkBG,OAAS,GAC7B,2CACEH,EAAkBG,QAAU,IAAMH,EAAkBG,OAAS,EAC/D,8BACJH,EAAkBZ,KAAI,SAAAL,GAAO,OAC5B,8BACE,8BAAuBA,EAAQC,KAA/B,IAAqC,wBAAQoB,QAASL,EAAYM,MAAOtB,EAAQC,KAA5C,oBAA7BD,EAAQC,aAKf,8BACJgB,EAAkBZ,KAAI,SAAAL,GAAO,OAC5B,cAAC,EAAD,CAASA,QAASA,UCUXuB,EA5BH,WACV,MAA4BtC,mBAAS,IAArC,mBAAO8B,EAAP,KAAeS,EAAf,KACA,EAAkCvC,mBAAS,IAA3C,mBAAO6B,EAAP,KAAkBW,EAAlB,KAkBA,OARArC,qBAAU,WACRC,IACGC,IAAI,wCACJE,MAAK,SAAAC,GACJgC,EAAahC,EAASC,WAEzB,IAGD,gCACE,cAAC,EAAD,CAAQb,KAlBS,SAAC6C,GACpBF,EAAUE,EAAMC,OAAOL,UAkBrB,cAAC,EAAD,CAAWR,UAAWA,EAAWC,OAAQA,EAAQC,WAflC,SAACU,GAClBF,EAAUE,EAAMC,OAAOL,cCV3BM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.775810e8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({func}) => {\r\n  return (\r\n    <div>\r\n      find countries <input onChange={func}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Weather = ({city}) => {\r\n  const [weather, setWeather] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://api.weatherbit.io/v2.0/current?city=${city}&key=${process.env.REACT_APP_API_KEY}`)\r\n      .then(response => {\r\n        setWeather(response.data.data[0])\r\n      })\r\n  }, [city])\r\n\r\n  if (weather) {\r\n    return <div>\r\n      <b>temperature: </b>{weather.temp}Â°C<br />\r\n      {weather.weather.description}<br />\r\n      <b>wind: </b>{weather.wind_spd} m/s direction {weather.wind_cdir}\r\n    </div>\r\n  } else {\r\n    return <div></div>\r\n  }\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport Weather from './Weather'\r\n\r\nconst Country = ({country}) => {\r\n  return (\r\n    <div>\r\n      <h2>{country.name}</h2>\r\n      <p>capital {country.capital}</p>\r\n      <p>population {country.population}</p>\r\n      <h3>languages</h3>\r\n      {country.languages.map((language, index) => \r\n        <li key={index}>{language.name}</li>\r\n      )}\r\n      <img src={country.flag} width=\"150\" height=\"150\" alt={country.name}/>\r\n      <h3>Weather in {country.name}</h3>\r\n      <Weather city={country.capital}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Country\r\n","import React from \"react\"\r\nimport Country from './Country'\r\n\r\nconst Countries = ({countries, filter, showButton}) => {\r\n  const filteredCountries = countries.filter(\r\n    country => country.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n  \r\n  if (filter === '') {\r\n    return 'Search for a country'\r\n  } else if (filteredCountries.length > 10) {\r\n    return 'Too many matches, specify another filter'\r\n  } else if (filteredCountries.length <= 10 && filteredCountries.length > 1) {\r\n    return <div>\r\n      {filteredCountries.map(country => \r\n        <div>\r\n          <p key={country.name}>{country.name} <button onClick={showButton} value={country.name}>show</button></p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  } else {\r\n    return <div>\r\n      {filteredCountries.map(country => \r\n        <Country country={country}/>\r\n      )}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Countries\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Filter from './components/Filter'\r\nimport Countries from './components/Countries'\r\n\r\nconst App = () => {\r\n  const [filter, setFilter] = useState('')\r\n  const [countries, setCountries] = useState([])\r\n\r\n  const changeFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const showButton = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://restcountries.eu/rest/v2/all')\r\n      .then(response => {\r\n        setCountries(response.data)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Filter func={changeFilter}/>\r\n      <Countries countries={countries} filter={filter} showButton={showButton}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}